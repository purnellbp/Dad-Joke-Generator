// /src/lib/openai-dad-joke-functions.ts

/**
 * This function schema requires:
 * - category (input)
 * - subTopic (generated by AI)
 * - text (the dad joke text)
 * - emoji (an optional emoji)
 */
export const createDadJokeFunction = {
  name: "createDadJoke",
  description:
    "Given a dad-joke category, come up with a funny sub-topic, then generate a joke about it.",
  parameters: {
    type: "object",
    properties: {
      category: {
        type: "string",
        description:
          "A broad dad-joke category (e.g., 'Popular TV Shows', 'Foodie Funnies', etc.)",
      },
      subTopic: {
        type: "string",
        description:
          "A specific sub-topic or scenario within that category. e.g., 'Farting during America's Got Talent'.",
      },
      text: {
        type: "string",
        description:
          "The actual text of the dad joke.",
      },
      emoji: {
        type: "string",
        description: "An optional emoji that fits the joke theme (e.g., ðŸ¤£, ðŸ’¨, etc.)",
      },
    },
    required: ["category", "subTopic", "text", "emoji"],
  },
} as const;

/**
 * TypeScript interface for the input and output of the above function.
 * The user/app supplies only `category`. The AI must fill out `subTopic`, `text`, and `emoji`.
 */
export interface CreateDadJokeFunctionArgs {
  category: string;
}

export interface CreateDadJokeFunctionResult {
  category: string;
  subTopic: string;
  text: string;
  emoji: string;
}

/**
 * If we need to pass multiple function schemas to openai in one request, we can
 * collect them in an array. For now, there's just one.
 */
export const dadJokeFunctions = [createDadJokeFunction];
